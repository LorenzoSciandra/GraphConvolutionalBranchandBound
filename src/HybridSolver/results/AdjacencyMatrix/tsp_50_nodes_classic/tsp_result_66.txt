
Reading from file '/home/lorenzosciandra/Documenti/Code/GithubProjects/HybridTSPSolver/src/HybridSolver/data/AdjacencyMatrix/tsp_50_nodes/tsp_test_66.csv'

Writing to file '/home/lorenzosciandra/Documenti/Code/GithubProjects/HybridTSPSolver/src/HybridSolver/results/AdjacencyMatrix/tsp_50_nodes_classic/tsp_result_66.txt'

Optimal tour found with candidate node = 34, elapsed time = 0.018998s and interrupted = FALSE

B-&-B tree with generated BBNodes = 3,  explored BBNodes = 2 and max tree level = 2

Number of fixed edges = 0

SUBPROBLEM with cost = 5.200781, type = CLOSED_SUBGRADIENT, level of the BB tree = 2, prob_tour = 0.000000, BBNode number = 2 and time to obtain = 0.017978s
MST or 1-Tree with cost: 5.550131 and validity = TRUE
Edge52: 1 <--> 4 weight = 0.111591 prob = 0.000000
Edge98: 2 <--> 3 weight = 0.089626 prob = 0.000000
Edge166: 3 <--> 25 weight = 0.054080 prob = 0.000000
Edge99: 2 <--> 4 weight = 0.101221 prob = 0.000000
Edge260: 5 <--> 30 weight = 0.085351 prob = 0.000000
Edge309: 6 <--> 36 weight = 0.027379 prob = 0.000000
Edge7: 0 <--> 7 weight = 0.017695 prob = 0.000000
Edge396: 8 <--> 40 weight = 0.155571 prob = 0.000000
Edge408: 9 <--> 12 weight = 0.073339 prob = 0.000000
Edge451: 10 <--> 16 weight = 0.119783 prob = 0.000000
Edge490: 11 <--> 17 weight = 0.175527 prob = 0.000000
Edge528: 12 <--> 18 weight = 0.190093 prob = 0.000000
Edge575: 13 <--> 29 weight = 0.179533 prob = 0.000000
Edge602: 14 <--> 21 weight = 0.078348 prob = 0.000000
Edge654: 15 <--> 39 weight = 0.010657 prob = 0.000000
Edge64: 1 <--> 16 weight = 0.042808 prob = 0.000000
Edge715: 17 <--> 35 weight = 0.041020 prob = 0.000000
Edge248: 5 <--> 18 weight = 0.063822 prob = 0.000000
Edge765: 19 <--> 24 weight = 0.062333 prob = 0.000000
Edge455: 10 <--> 20 weight = 0.121769 prob = 0.000000
Edge831: 21 <--> 33 weight = 0.083964 prob = 0.000000
Edge862: 22 <--> 37 weight = 0.173362 prob = 0.000000
Edge892: 23 <--> 41 weight = 0.020285 prob = 0.000000
Edge849: 22 <--> 24 weight = 0.196534 prob = 0.000000
Edge932: 25 <--> 32 weight = 0.088659 prob = 0.000000
Edge607: 14 <--> 26 weight = 0.037486 prob = 0.000000
Edge988: 27 <--> 43 weight = 0.117929 prob = 0.000000
Edge1012: 28 <--> 46 weight = 0.020342 prob = 0.000000
Edge644: 15 <--> 29 weight = 0.202103 prob = 0.000000
Edge1047: 30 <--> 42 weight = 0.096062 prob = 0.000000
Edge882: 23 <--> 31 weight = 0.025176 prob = 0.000000
Edge428: 9 <--> 32 weight = 0.115982 prob = 0.000000
Edge506: 11 <--> 33 weight = 0.096652 prob = 0.000000
Edge581: 13 <--> 35 weight = 0.087815 prob = 0.000000
Edge777: 19 <--> 36 weight = 0.189656 prob = 0.000000
Edge393: 8 <--> 37 weight = 0.140303 prob = 0.000000
Edge961: 26 <--> 38 weight = 0.107417 prob = 0.000000
Edge39: 0 <--> 39 weight = 0.012476 prob = 0.000000
Edge355: 7 <--> 40 weight = 0.220698 prob = 0.000000
Edge1007: 28 <--> 41 weight = 0.108181 prob = 0.000000
Edge1199: 42 <--> 44 weight = 0.028025 prob = 0.000000
Edge1210: 43 <--> 49 weight = 0.081438 prob = 0.000000
Edge1067: 31 <--> 44 weight = 0.039016 prob = 0.000000
Edge318: 6 <--> 45 weight = 0.072490 prob = 0.000000
Edge1221: 46 <--> 48 weight = 0.059733 prob = 0.000000
Edge817: 20 <--> 47 weight = 0.064496 prob = 0.000000
Edge1218: 45 <--> 48 weight = 0.175119 prob = 0.000000
Edge1224: 47 <--> 49 weight = 0.286849 prob = 0.000000
Edge1109: 34 <--> 38 weight = 0.209284 prob = 0.000000
Edge979: 27 <--> 34 weight = 0.241708 prob = 0.000000

Cycle with 50 edges:  34 <-> 38   26 <-> 38   14 <-> 26   14 <-> 21   21 <-> 33   11 <-> 33   11 <-> 17   17 <-> 35   13 <-> 35   13 <-> 29   15 <-> 29   15 <-> 39   0 <-> 39   0 <-> 7   7 <-> 40   8 <-> 40   8 <-> 37   22 <-> 37   22 <-> 24   19 <-> 24   19 <-> 36   6 <-> 36   6 <-> 45   45 <-> 48   46 <-> 48   28 <-> 46   28 <-> 41   23 <-> 41   23 <-> 31   31 <-> 44   42 <-> 44   30 <-> 42   5 <-> 30   5 <-> 18   12 <-> 18   9 <-> 12   9 <-> 32   25 <-> 32   3 <-> 25   2 <-> 3   2 <-> 4   1 <-> 4   1 <-> 16   10 <-> 16   10 <-> 20   20 <-> 47   47 <-> 49   43 <-> 49   27 <-> 43   27 <-> 34 
1 Mandatory edges
50 Forbidden edges
Time taken: 0.02241349220275879s
