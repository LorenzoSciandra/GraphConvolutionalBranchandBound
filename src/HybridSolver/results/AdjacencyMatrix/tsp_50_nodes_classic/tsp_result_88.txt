
Reading from file '/home/lorenzosciandra/Documenti/Code/GithubProjects/HybridTSPSolver/src/HybridSolver/data/AdjacencyMatrix/tsp_50_nodes/tsp_test_88.csv'

Writing to file '/home/lorenzosciandra/Documenti/Code/GithubProjects/HybridTSPSolver/src/HybridSolver/results/AdjacencyMatrix/tsp_50_nodes_classic/tsp_result_88.txt'

Optimal tour found with candidate node = 30, elapsed time = 0.014614s and interrupted = FALSE

B-&-B tree with generated BBNodes = 1,  explored BBNodes = 1 and max tree level = 0

Number of fixed edges = 0

SUBPROBLEM with cost = 5.586776, type = CLOSED_SUBGRADIENT, level of the BB tree = 1, prob_tour = 0.000000, BBNode number = 1 and time to obtain = 0.002000s
MST or 1-Tree with cost: 2.823228 and validity = TRUE
Edge61: 1 <--> 13 weight = 0.107240 prob = 0.000000
Edge100: 2 <--> 5 weight = 0.184901 prob = 0.000000
Edge174: 3 <--> 33 weight = 0.083222 prob = 0.000000
Edge192: 4 <--> 6 weight = 0.147319 prob = 0.000000
Edge256: 5 <--> 26 weight = 0.088869 prob = 0.000000
Edge291: 6 <--> 18 weight = 0.103508 prob = 0.000000
Edge346: 7 <--> 31 weight = 0.172572 prob = 0.000000
Edge392: 8 <--> 36 weight = 0.087819 prob = 0.000000
Edge416: 9 <--> 20 weight = 0.092405 prob = 0.000000
Edge469: 10 <--> 34 weight = 0.136221 prob = 0.000000
Edge152: 3 <--> 11 weight = 0.207423 prob = 0.000000
Edge524: 12 <--> 14 weight = 0.055013 prob = 0.000000
Edge578: 13 <--> 32 weight = 0.051208 prob = 0.000000
Edge370: 8 <--> 14 weight = 0.118688 prob = 0.000000
Edge632: 15 <--> 17 weight = 0.077806 prob = 0.000000
Edge631: 15 <--> 16 weight = 0.173550 prob = 0.000000
Edge717: 17 <--> 37 weight = 0.094950 prob = 0.000000
Edge740: 18 <--> 29 weight = 0.045125 prob = 0.000000
Edge789: 19 <--> 48 weight = 0.034089 prob = 0.000000
Edge817: 20 <--> 47 weight = 0.032617 prob = 0.000000
Edge847: 21 <--> 49 weight = 0.051900 prob = 0.000000
Edge763: 19 <--> 22 weight = 0.139192 prob = 0.000000
Edge876: 23 <--> 25 weight = 0.035424 prob = 0.000000
Edge918: 24 <--> 42 weight = 0.141095 prob = 0.000000
Edge928: 25 <--> 28 weight = 0.055486 prob = 0.000000
Edge902: 24 <--> 26 weight = 0.127289 prob = 0.000000
Edge991: 27 <--> 46 weight = 0.127678 prob = 0.000000
Edge1007: 28 <--> 41 weight = 0.164838 prob = 0.000000
Edge1024: 29 <--> 38 weight = 0.244433 prob = 0.000000
Edge217: 4 <--> 31 weight = 0.060283 prob = 0.000000
Edge467: 10 <--> 32 weight = 0.109154 prob = 0.000000
Edge1091: 33 <--> 35 weight = 0.177714 prob = 0.000000
Edge979: 27 <--> 34 weight = 0.168172 prob = 0.000000
Edge833: 21 <--> 35 weight = 0.105758 prob = 0.000000
Edge509: 11 <--> 36 weight = 0.025379 prob = 0.000000
Edge37: 0 <--> 37 weight = 0.063211 prob = 0.000000
Edge434: 9 <--> 38 weight = 0.107057 prob = 0.000000
Edge890: 23 <--> 39 weight = 0.089819 prob = 0.000000
Edge135: 2 <--> 40 weight = 0.039416 prob = 0.000000
Edge551: 12 <--> 41 weight = 0.099373 prob = 0.000000
Edge357: 7 <--> 42 weight = 0.055722 prob = 0.000000
Edge1205: 43 <--> 44 weight = 0.117244 prob = 0.000000
Edge869: 22 <--> 44 weight = 0.104689 prob = 0.000000
Edge1185: 40 <--> 45 weight = 0.204856 prob = 0.000000
Edge1216: 45 <--> 46 weight = 0.138785 prob = 0.000000
Edge695: 16 <--> 47 weight = 0.082100 prob = 0.000000
Edge96: 1 <--> 48 weight = 0.027527 prob = 0.000000
Edge49: 0 <--> 49 weight = 0.093310 prob = 0.000000
Edge1044: 30 <--> 39 weight = 0.245291 prob = 0.000000
Edge1048: 30 <--> 43 weight = 0.290037 prob = 0.000000

Cycle with 50 edges:  30 <-> 39   23 <-> 39   23 <-> 25   25 <-> 28   28 <-> 41   12 <-> 41   12 <-> 14   8 <-> 14   8 <-> 36   11 <-> 36   3 <-> 11   3 <-> 33   33 <-> 35   21 <-> 35   21 <-> 49   0 <-> 49   0 <-> 37   17 <-> 37   15 <-> 17   15 <-> 16   16 <-> 47   20 <-> 47   9 <-> 20   9 <-> 38   29 <-> 38   18 <-> 29   6 <-> 18   4 <-> 6   4 <-> 31   7 <-> 31   7 <-> 42   24 <-> 42   24 <-> 26   5 <-> 26   2 <-> 5   2 <-> 40   40 <-> 45   45 <-> 46   27 <-> 46   27 <-> 34   10 <-> 34   10 <-> 32   13 <-> 32   1 <-> 13   1 <-> 48   19 <-> 48   19 <-> 22   22 <-> 44   43 <-> 44   30 <-> 43 
0 Mandatory edges
0 Forbidden edges
Time taken: 0.01929450035095215s
